import type { ReactNode } from "react";
import type { PostgrestSingleResponse } from "@supabase/supabase-js";
import type { Metadata } from "next";
import { cookies } from "next/headers";
import { createClient } from "../lib/supabase/server";
import AppProvider from "./_components/app-provider";
import { BkmarkedMovies } from "./[category]/bookmark-page";
import "./globals.css";

export const metadata: Metadata = {
  title: "Entertainment App",
  description: "Generated by create next app",
  icons: {
    icon: "/shared/app-icon.png",
    shortcut: "/shared/app-icon.png",
    apple: "/shared/app-icon.png"
  }
};

export default async function RootLayout({ children }: { children: ReactNode }) {
  const supabase = createClient(cookies());
  const { data } = await supabase.auth.getSession();
  const bkmarkedMovies: PostgrestSingleResponse<BkmarkedMovies[]> | null = data.session
    ? await supabase
        .from("bookmarked_movies")
        .select("title, category")
        .eq("user_id", data.session?.user?.id)
    : null;

  return (
    <html lang="en">
      <body suppressHydrationWarning>
        <AppProvider session={data.session} bkmarkedMovies={bkmarkedMovies?.data ? bkmarkedMovies.data : null}>
          {children}
        </AppProvider>
      </body>
    </html>
  );
}
